# Sets & Relations

## Relations

###Orders

####Partial Orders

A relation is a partial-order relation that is reflexive, antisymmetric and transitive. 
<br>It has to have all three of these properties to be a partial order relation.
<br>In essence, there must be some order to the elements in the set, meaning some come before others, and there are no cycles (other than self-loops).


Looking back at the original Loves relation on Folks = {Sam,Jamie},

<img src="https://carnap.io/shared/smcintyre/loves1.png" alt="Loves Relation on {Sam,Jamie}">
<br>Is this a partial order?
<br>Yes, it is. We early discovered it is reflexive, transitive, and antisymmetric.
<br>As it satisfies all three properties, it is a partial order.


```{.QualitativeProblem .MultipleSelection options="check" submission="none" content-format="html"}
1. Let A = {1,2,3}. Select all of the relations below on A such that the relation is a partial order.
| *R = {(1,1),(2,2),(3,3)}
| *R = {(1,1),(2,3),(2,2),(3,3),(3,1)}
| R = {(1,2),(2,3),(3,3)}
| R = {(1,1),(1,2),(2,2),(2,1)}
```

```{.QualitativeProblem .MultipleSelection options="check" submission="none" content-format="html"}
2. Let A = ℕ. Select all of the relations below on A such that the relation is a partial order.
| R is the < relation.
| *R is the ≤ relation.
| *R is the = relation.
| R is the ≠ relation.
```

####Hasse Diagrams 

We sometimes diagram partial orders where aRb is represented by a being physically below b. 
<br>Start with an empty diagram.
<br>$~~~~$For all pairs, if there are no elements c such that aRc and cRb, we draw an arrow between a,b.
<br>$~~~~$When you are done, find the Nodes with no incoming arrows, and then draw them at the bottom, and build upwards.
<br>$~~~~$Then remove the arrow head so it is just a line.
<br>These diagrams have the reflexivity and transitivity implicitly shown.
<br>The "smallest" elements are at the bottom, and it grows upwards.

Here's the Hasse Diagram of the Loves on Folks relation.
<br><img src="https://carnap.io/shared/smcintyre/loves1_ord.png" alt="Loves Relation on {Sam,Jamie}">
<br>Notice how we removed the self loops. Sam is at the bottom as Sam Loves Jamie, but Jamie does not love Sam.


<img src="https://carnap.io/shared/smcintyre/loves_ord.png" alt="Loves Relation on {Sam,Jamie}">


```{.QualitativeProblem .MultipleChoice options="check" submission="none" content-format="html"}
3. For the above Hasse Diagram, identify the relation R. Remember, R is a partial order!
| R = {(Jamie,Erin),(Erin,Alex),(Sam,Alex),(Sam,Erin)}
| R = {(Erin,Jamie),(Alex,Sam),(Alex,Erin),(Alex,Alex),(Erin,Sam),(Jamie,Alex),(Erin,Alex),(Sam,Alex),(Sam,Erin)}
| R = {(Jamie,Jamie),(Sam,Sam),(Erin,Erin),(Alex,Alex),(Jamie,Erin),(Erin,Alex),(Sam,Alex),(Sam,Erin)}
| *R = {(Jamie,Jamie),(Sam,Sam),(Erin,Erin),(Alex,Alex),(Jamie,Erin),(Jamie,Alex),(Erin,Alex),(Sam,Alex),(Sam,Erin)}
```




####Total Orders

An order relation R on set B is a Total Order if and only if for all a,b in B, either aRb or bRa.
<br>In short, it means EVERY pair relates in at least one direction.
<br>If we look up to the exercise question from the Hasse Diagram, we notice that Sam and Jamie are both on the same level. 
<br>So they do not relate via transitivity. Additionally, there is no line between Sam and Jamie.
<br>This means these two do not relate, and thus that relation is not a total order relation.

In fact, if we drew the Hasse Diagram for a total order, you will notice that all of the Nodes form a straight line!
```{.QualitativeProblem .MultipleSelection options="check" submission="none" content-format="html"}
4. Let A = {1,2,3,4}. Select all of the relations below on A such that the relation is a total order.
| R = {(1,1),(2,2),(3,3),(4,4)}
| R = {(1,1),(2,3),(2,2),(3,3),(3,1),(4,4)}
| *R = {(1,1),(2,2),(3,3),(4,4),(3,1),(3,4),(2,3),(2,4),(2,1),(4,1)}
| R = {(1,1),(2,2),(3,3),(4,4),(3,1),(2,3),(2,4),(2,1),(4,1)}
```

```{.QualitativeProblem .MultipleSelection options="check" submission="none" content-format="html"}
5. Let A = ℕ. Select all of the relations below on A such that the relation is a total order.
| R is the < relation.
| *R is the ≤ relation.
| R is the = relation.
| R is the ≠ relation.
```

<br><br><br>Next we will discuss Functions.

<p>[Previous: Equivalence Relations](https://carnap.io/shared/smcintyre/SR-eq.pandoc) &emsp; &emsp; &emsp; &emsp; [-Main Page-](https://carnap.io/shared/smcintyre/Workbook.pandoc#part-iv-sets-relations)   &emsp; &emsp; &emsp; &emsp;  [Next: Functions](https://carnap.io/shared/smcintyre/SR-fun.pandoc) </p>
