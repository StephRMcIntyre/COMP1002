---
from markdown+simple_tables
---

# First-Order Logic

## Universal Elimination/Specification/Instantiation

====================

∀xPx asserts that every object in the universe satisfies property P.
Since every object satisfies P, then we may conclude Pt for some specific object in the universe t.

We can think of ∀xPx as asserting a grand conjunction where we have P$t_1$∧P$t_2$∧P$t_3$∧… where $t_1,t_2,t_3$,.. are all of the objects in U. 
It is similar to ∧E in this regard, but instead of eliminating ∧, it eliminates ∀.

+ Note: This phrasing fails* for infinite universes (like reasoning about numbers)
+ *The phrasing fails, but the proof rule remains sound.

To denote Universal Elimination in Carnap, we would write the justification ":AE m" where m is the line number we are referencing.

Exercise: Finish the proof below.

~~~{.ProofChecker system="thomasBolducAndZachFOL" options="indent resize guides render tabindent fonts" init="now" submission="none" points=0}
1 Ax Lcx :|-: Lcj
| Ax Lcx :PR
| Lcj
~~~

__Important note__ : When ∀xPxx is put through universal elimination, we must replace every x present in the formula under the scope of the ∀ quantifier. 
<br>One could not turn ∀xPxx into ∀xPax or Pax.  

The proof below is incorrect. Correct and finish the proof.

~~~{.ProofChecker system="thomasBolducAndZachFOL" options="indent resize guides render tabindent fonts" init="now" submission="none" points=0}
2 ∀xPxx :|-: ExEy Pxy
| ∀xPxx :PR
| Pab :∀E 1
| EyPay :EI 2
| ExEyPxy :EI 3
~~~


If we want to universally generalize a compound wff, we must apply it to the entire wff.
<br>The second line of the proof is incorrect. Fix and complete the proof.

~~~{.ProofChecker system="thomasBolducAndZachFOL" options="indent resize guides render tabindent fonts" init="now" submission="none" points=0}
3 ∀x(Lxb /\ Lcx) :|-: Ex (Lab /\ Ey Lyx)
| ∀x(Lxb /\ Lcx) :PR
| Lab /\ ∀xLcx :AE 1
| Lab /\ Lcd :AE 2
| Lab /\ Ey Lyd :EI 3
~~~


~~~{.ProofChecker system="thomasBolducAndZachFOL" options="indent resize guides render tabindent fonts" init="now" submission="none" points=0}
4 Pa, AxAyLxy :|-: Ex(Px /\ Lax) 
| Pa :PR
| AxAyLxy :PR
~~~

Sometimes it takes a minute to find the contradiction... 
<br>Remember, using the X rule, _anything_ wff follows. 

~~~{.ProofChecker system="thomasBolducAndZachFOL" options="indent resize guides render tabindent fonts" init="now" submission="none" points=0}
5 Lab /\ Pb, AxAy(Lxy -> ~Py) :|-: AxQxx 
~~~

The above proof would then translate:
<br>$~~~$a relates to b via L and b is a P. Also, for any two items x and y, if x relates to y via L, then y is not a P.
<br>$~~~$Since a relates to b via L and b is a P, then a relates to b via L. Also, b is a P.
<br>$~~~$Since for any two items x and y, if x relates to y via L, then y is not a P -- let's specify x as a.
<br>$~~~$Since for any item y, if a relates to y via L, then y is not a P -- let's specify y as b.
<br>$~~~$Then we get that if a relates to b via L, then b is not a P. 
<br>$~~~$We know that a relates to b via L, so b is not a P.
<br>$~~~$As b is both a P and not a P, then we have a contradiction. 
<br>$~~~$As anything follows from a contradiction, then it is the case that every x relates to x via Q.

~~~{.ProofChecker system="thomasBolducAndZachFOL" options="indent resize guides render tabindent fonts" init="now" submission="none" points=0}
6 :|-: ~Ax(Px /\ ~Px) 
~~~

<p>[Previous: Existential Introduction](https://carnap.io/shared/srenee651@gmail.com/book-FOL-ND-ei.pandoc) &emsp; &emsp; &emsp; &emsp; [-Main Page-](https://carnap.io/shared/srenee651@gmail.com/Workbook.pandoc#part-ii-first-order-logic)   &emsp; &emsp; &emsp; &emsp;  [Next: Universal Introduction](https://carnap.io/shared/srenee651@gmail.com/book-FOL-ND.ui) </p>

