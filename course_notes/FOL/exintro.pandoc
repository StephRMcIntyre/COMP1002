--from markdown+simple_tables
---

# First-Order Logic

## Existential Introduction/Instantiation

====================

P(t) asserts that object t satisfies property P.
Since some object (in particular, t) satisfies P, we may conclude ∃xP(x).

+t in P(t) is any constant including but not limited to arbitrary objects. 

We can think of ∃xPx as asserting a grand disjunction where we have $Pt_1∨Pt_2∨Pt_3$∨… where $t_1,t_2,t_3$,.. are all of the objects in U. 
It is similar to ∨I in this regard, but instead of introducing ∨, it introduces ∃.

+ Note: This phrasing fails* for infinite universes (like reasoning about numbers)
+ *The phrasing fails, the proof rule remains sound.

To denote Existential Introduction in Carnap, we would write the justification ':EI m' where m is the line number we are referencing.

Exercise: Finish the proof below.
~~~{.ProofChecker .thomasBolducAndZachFOL options="indent resize guides render tabindent fonts" init="now" submission="none" points=0}
2 Lcj :|-: Ex Ey Lxy
| Lcj :PR
| EyLcy
| ExEyLxy
~~~

<!---
This is a comment

* Note: If for example P(kk) where k = kitkat and P = plays with. One can turn Pkk into ExPxx since there exists an x that plays with itself. Likewise
one can turn P(kk) into ExPkx or ExPxk. And proceed to turn for example ExPkx into EyExPyx. This is true since there exists a y and there exists an x such that y plays with x.
*__Important note__ : When ExPkx is put through another existential introduction, the Ey must come before Ex as such EyExPyx. 
One could not turn ExPkx into ExEyPyx since the most recent existential introduction has the scope of the whole formula. 
Another example of this is wanting to existentially quantify the b in Pkc v Pkb. One can not turn this into (ExPkc v Pkx) or (Pkc v ExPkx), but rather Ex(Pkc v Pkx) would be correct. 
--> 

Exercise 1

~~~{.ProofChecker .thomasBolducAndZachFOL options="indent resize guides render tabindent fonts" init="now" submission="none" points=0}
1 Ljc, Lcj :|-: (Ex (Ljx)) /\ (Ex (Lxj)) 
~~~

Exercise 2

~~~{.ProofChecker .thomasBolducAndZachFOL options="indent resize guides render tabindent fonts" init="now" submission="none" points=0}
2 :|-: Ex(Px /\ ~Px) 
~~~

More difficult Exercise(Knowledge of existential elimination is required for this one so come back to it after next part)

~~~{.ProofChecker .thomasBolducAndZachFOL options="indent resize guides render tabindent fonts" init="now" submission="none" points=0}
3  :|-: Ex(Px /\ Qx) -> (Ex(Px) /\ Ex(Qx))
~~~
