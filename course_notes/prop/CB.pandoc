---
--from markdown+simple_tables
---

# Propositional Logic

## Conditionals and Biconditionals

###Semantics: Conditionals

__Truth-Value Assignment for Conditionals__

A conditional $\alpha \to \beta$ is true if and only if $\alpha$ is false (F) or $\beta$ is true (T).

You can think of $\alpha \to \beta$ as a promise. 

Consider the statement: “If you do all your homework and study, then you will pass the
class.” If it is true that you did all your homework and you studied, but you did not pass, then the promise is broken, and thus the statement is false.

Alternatively, think of a politician that says "If I am elected then free tuition for everyone.”
When would you say that they did not deliver on their promise?
Would you hold them accountable for their promise even if they are not elected?

Example: D $\to$ F: If it is drizzling then it is foggy in St.John's.

The first kind of truth table.

```{.TruthTable .Simple system="thomasBolducAndZachTFL2019" submission="none" options="nocounterexample immutable nodash"}
C1.1 P -> Q
|     -T-
|     -F-
|     -T-
|     -T-
```

The second kind of truth table.

```{.TruthTable .Simple system="thomasBolducAndZachTFL2019" submission="none" options="nocounterexample immutable nodash"}
C1.2 P -> Q
|    TTT
|    TFF
|    FTT
|    FTF
```

Exercise: Construct the truth table for $\neg P \to Q \lor P$.

~~~{.SynChecker .Match system="thomasBolducAndZachTFL2019" submission="none"} 
C2.1 ~P -> (Q \/ P)
~~~

```{.TruthTable .Simple system="thomasBolducAndZachTFL2019" submission="none" options="nocounterexample nodash autoAtom"}
C2.2 ~P -> (Q \/ P)
```

###Conditionals: Equivalences

Example: Show $P \to Q$ ⧦ $\neg P \lor Q$. 

```{.TruthTable .Simple system="thomasBolducAndZachTFL2019" submission="none" options="nocounterexample nodash immutable nocheck"}
C3.1 P->Q, ~P, ~P\/Q
|    -T-  F-  --T -
|    -F-  F-  --F -
|    -T-  T-  --T -
|    -T-  T-  --T -
```

Note how the columns with $P \to Q$ and $\neg P \lor Q$ are identical.

```{.TruthTable .Simple system="thomasBolducAndZachTFL2019" submission="none" options="nocounterexample nodash immutable nocheck"}
C3.2 P->Q, ~P\/Q
|    TTT  FTT T
|    TFF  FTF F
|    FTT  TFT T
|    FTF  TFT F
```

Exercise: Show $P \to (Q \to R)$ ⧦ $P \land Q \to R$. 

```{.TruthTable .Simple system="thomasBolducAndZachTFL2019" submission="none" options="nocounterexample nodash nocheck"}
C4.1 P->(Q->R), (P/\Q)->R
```

###Conditionals: Logical Implications

Example: Show that $P \to Q, P \models Q$

```{.TruthTable .Validity system="thomasBolducAndZachTFL2019" submission="none" options="nocheck nodash immutable turnstilemark double-turnstile"}
C5.1 P->Q, P:|-: Q
|    -T-   T T   T
|    -F-   T T   F
|    -T-   F T   T
|    -T-   F T   F
```

```{.TruthTable .Validity system="thomasBolducAndZachTFL2019" submission="none" options="nocheck nodash immutable turnstilemark double-turnstile"}
C5.2 P->Q, P:|-: Q
|    TTT   T T   T
|    TFF   T T   F
|    FTT   F T   T
|    FTF   F T   F
```

Notice how there is no counterexample where both premises are True and the conclusion is False. This absence of a counterexample leads the logical implication to hold.

Example: Show that $P \to Q, Q$ ⊭ $P$

Enter in the counterexample as the row of truth-values for the propositional variables. For example, if P=T and Q=T is the counterexample, enter in TT.


```{.TruthTable .Validity system="thomasBolducAndZachTFL2019" submission="none" options="nocheck nodash immutable turnstilemark double-turnstile"}
C6.1 P->Q, Q:|-: P
|    -T-   T T   T
|    -F-   F T   T
|    -T-   T F   F
|    -T-   F T   F
```

```{.TruthTable .Validity system="thomasBolducAndZachTFL2019" submission="none" options="nocheck nodash immutable turnstilemark double-turnstile"}
C6.2 P->Q, Q:|-: P
|    TTT   T T   T
|    TFF   F T   T
|    FTT   T F   F
|    FTF   F T   F
```

Exercises: 

Show that ruling out the consequent in a conditional statement logically implies the negation of the antecedent: $P \to Q, \neg Q \models \neg P$.


```{.TruthTable .Validity system="thomasBolducAndZachTFL2019" submission="none" options="nodash turnstilemark double-turnstile"}
C7.1 P->Q, ~Q:|-: ~P
```


Show that ruling out the antecedent in a conditional statement does not logically imply the
negation of the consequent: $P \to Q, \neg P$ ⊭ $\neg Q$.


```{.TruthTable .Validity system="thomasBolducAndZachTFL2019" submission="none" options="nodash turnstilemark double-turnstile"}
C7.2 P->Q, ~P:|-: ~Q
```


###Semantics: Biconditionals

__Truth-Value Assignment for Bionditionals__

A biconditional $\alpha \leftrightarrow \beta$ is true if and only if $\alpha$ and $\beta$ have the __same__ truth value. That is, both of them are True (T) or both of them are False (F).

Example: D $\leftrightarrow$ F: It is drizzling in St. John's if and only if it is foggy in St.John's.

The first kind of truth table.

```{.TruthTable .Simple system="thomasBolducAndZachTFL2019" submission="none" options="nocounterexample immutable nodash"}
B1.1 P <-> Q
|     -T-
|     -F-
|     -F-
|     -T-
```

The second kind of truth table.

```{.TruthTable .Simple system="thomasBolducAndZachTFL2019" submission="none" options="nocounterexample immutable nodash"}
B1.2 P <-> Q
|    TTT
|    TFF
|    FFT
|    FTF
```

Exercise: Construct the truth table for $\neg P \leftrightarrow Q \lor P$.

~~~{.SynChecker .Match system="thomasBolducAndZachTFL2019" submission="none"} 
B2.1 ~P <-> (Q \/ P)
~~~

```{.TruthTable .Simple system="thomasBolducAndZachTFL2019" submission="none" options="nocounterexample nodash autoAtom"}
B2.2 ~P <-> (Q \/ P)
```

###Biconditionals: Equivalences

Example: Show $P \leftrightarrow Q$ ⧦ $(P \to Q) \land (Q \to P)$. 

```{.TruthTable .Simple system="thomasBolducAndZachTFL2019" submission="none" options="nocounterexample nodash immutable nocheck"}
B3.1 P->Q, Q->P, (P->Q)/\(Q->P), P<>Q
|    -T-   -T-    ---  T  ---    -T -
|    -F-   -T-    ---  F  ---    -F -
|    -T-   -F-    ---  F  ---    -F -
|    -T-   -T-    ---  T  ---    -T -
```

Note how the columns with $P \leftrightarrow Q$ and $(P \to Q) \land (Q \to P)$ are identical.

```{.TruthTable .Simple system="thomasBolducAndZachTFL2019" submission="none" options="nocounterexample nodash immutable nocheck"}
B3.2 (P->Q)/\(Q->P), P<>Q
|      TTT T  TTT     TTT
|      TFF F  TTT     TFF
|      FTT F  TFF     FFT
|      FTF T  FTF     FTF 
```

Exercise: Show $P \leftrightarrow Q$ ⧦ $(P \land Q) \lor (\neg P \land \neg Q)$. 

```{.TruthTable .Simple system="thomasBolducAndZachTFL2019" submission="none" options="nocounterexample nodash nocheck"}
B4.1 P<>Q, (P/\Q)\/(~P/\~Q)
```

###Biconditionals: Logical Implications

Example: Show that $P \leftrightarrow Q, P \models Q$

```{.TruthTable .Validity system="thomasBolducAndZachTFL2019" submission="none" options="nocheck nodash immutable turnstilemark double-turnstile"}
C5.1  P<>Q, P:|-: Q
|     -T-   T T   T
|     -F-   T T   F
|     -F-   F T   T
|     -T-   F T   F
```

```{.TruthTable .Validity system="thomasBolducAndZachTFL2019" submission="none" options="nocheck nodash immutable turnstilemark double-turnstile"}
C5.2  P<>Q, P:|-: Q
|     TTT   T T   T
|     TFF   T T   F
|     FFT   F T   T
|     FTF   F T   F
```

Notice how there is no counterexample where both premises are True and the conclusion is False. This absence of a counterexample leads the logical implication to hold.

Example: Show that $P \leftrightarrow Q, Q$ ⊭ $\neg P$

Enter in the counterexample as the row of truth-values for the propositional variables. For example, if P=T and Q=T is the counterexample, enter in TT.


```{.TruthTable .Validity system="thomasBolducAndZachTFL2019" submission="none" options="nocheck nodash immutable turnstilemark double-turnstile"}
C6.1 P<>Q, Q:|-: ~P
|    -T-   T F   F-
|    -F-   F T   F-
|    -F-   T T   T-
|    -T-   F T   T-
```

```{.TruthTable .Validity system="thomasBolducAndZachTFL2019" submission="none" options="nocheck nodash immutable turnstilemark double-turnstile"}
C6.2 P<>Q, Q:|-: ~P
|    TTT   T F   FT
|    TFF   F T   FT
|    FFT   T T   TF
|    FTF   F T   TF
```

Exercises: 

Show that a bicondition will have either the left side or the negation of the right side: $P \leftrightarrow Q \models P \lor \neg Q$.


```{.TruthTable .Validity system="thomasBolducAndZachTFL2019" submission="none" options="nodash turnstilemark double-turnstile"}
C7.1 P<>Q :|-: P \/ ~Q
```


Show a biconditional does not logical imply that one of the sides is true: $P \leftrightarrow Q$ ⊭ $P \lor Q$.


```{.TruthTable .Validity system="thomasBolducAndZachTFL2019" submission="none" options="nodash turnstilemark double-turnstile"}
C7.2 P<>Q :|-: P\/Q
```


<p>[Previous: Logical Equivalence & Implication](https://carnap.io/shared/srenee651@gmail.com/book-prop-arg.pandoc) &emsp; &emsp; &emsp; &emsp; [-Main Page-](https://carnap.io/shared/srenee651@gmail.com/Workbook.pandoc)  &emsp; &emsp; &emsp; &emsp;  [Next: Sound & Valid Arguments](https://carnap.io/shared/srenee651@gmail.com/book-prop-SV.pandoc) </p>
