---
--from markdown+simple_tables
---

# Propositional Logic

## Translations

Translations require an interpretation key. This pairs propositions with propositional variables. Here is an example interpretation key:

* A: Two plus two is equal to five.
* B: Two plus two is greater than five.
* R: St.John's is raining.
* D: St.John's is drizzling.
* F: St.John's is foggy.

###Negation

To symbolize negation, you should rewrite the English statement using "not" or "it is not the case that" followed by the sentence being negated (e.g., "its not the case that [St.John's is raining]"). You can then express the statement with propositional variables and the "$\neg$" symbol (use `~` on your keyboard).

Example:

~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
N.1 ~R: It is not the case that St.John's is raining.
|
~~~

The example can be solved by entering ~R. 
<br> Hit the enter key to check if your answer is correct.

Exercise:


~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
N.2 ~A: Two plus two does not equal five.
| Hint: move "not" to front of the atomic propostion.
~~~

###Conjunction
"And", "although", "but" are symbolized using $\land$. On the keyboard, you can use `/\` or `&` instead. 

Example:

~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
C.1 D /\ F: St.John's is drizzling and foggy.
|
~~~

The example can be solved by entering D /\ F.

Exercise:

~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
C.2 R/\~F: St.John's is raining but not foggy.
| Hint: remember what "but" means.
~~~

###Disjunction

"Either or", "or" are symbolized using $\lor$, or `\/` on your keyboard. Disjunctions are always assumed to be inclusive unless explicitly stated otherwise (usually denoted with a "but not both" clause)

Example:

~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
D.1 D\/R: St.John's is drizzling or raining.
|
~~~

The example can be solved by entering D \/ R.

Exercises:

~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
D.2 D\/R\/F: St.John's is either raining, drizzling, or foggy.
| Hint: three disjunctions.
~~~

~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
D.3 (D/\F)\/R: St.John's is either drizzling and foggy, or raining.
| Hint: Look at where the "either or" is split.
~~~

~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
D.4 A\/B: Two plus two is greater than or equal to five.
| 
~~~

###Conditionals

"if" and "only if" are
symbolized with $\to$ (-> on the keyboard).

The statement $P\to Q$ can be expressed in a variety of ways:

+ "if P then Q",
+ "if P, Q",
+ "Q if P",
+ "Q when P",
+ "P imples Q",
+ "P only if Q",
+ "Q whenever P",
+ "P is sufficient for Q",
+ "Q is necessary for P".

The last two are very common in mathematics and computer science.

Example:

~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
C.1 D->R: If St.John's is drizzling then it is raining.
|
~~~

The example can be solved by entering D -> R.

Exercises:

~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
C.2 A -> (A \/ B): If two plus two equals five then two plus two is greater than or equal to five.
| Hint: This uses a previous solution.
~~~

~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
C.3 ~(F->R): It is not the case that if St.John's is foggy then it is raining.
| Hint: Look at where the "not" is in the statement.
~~~ 

~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
C.4 F->R: In St.John's it is foggy only if it is raining.
| Hint: Look up "only if".
~~~

###Biconditionals

"if and only if", "iff" and "is necessary and sufficient for" are symbolized with $\leftrightarrow$ (<-> on the keyboard).

Example:

~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
B.1 D<->R: St.John's is drizzling if and only if it is raining.
|
~~~

The example can be solved by entering D <-> R.

Exercises:

~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
B.2 ~A <-> B: Two plus two does not equal 5 if and only if two plus two is greater than 5.
|
~~~

~~~{.Translate .Prop system="thomasBolducAndZachTFL2019" submission="none"}
B.3 D<->(R/\F): For St.John's to be drizzling it is necessary and sufficient for St.John's to both be raining and foggy.
|
~~~

<p>[Previous: Syntax](https://carnap.io/shared/srenee651@gmail.com/book-prop-syntax.pandoc) &emsp; &emsp; &emsp; &emsp; [-Main Page-](https://carnap.io/shared/srenee651@gmail.com/Workbook.pandoc)  &emsp; &emsp; &emsp; &emsp;  [Next: Conjunction, Disjunction and Negation](https://carnap.io/shared/srenee651@gmail.com/book-prop-CDN.pandoc) </p>
